scalar Date

schema {
  query: Query
  mutation: Mutation
}

type Query {
  me: Account!
  account(id: ID!): Account
  transactions(id: ID!): Transactions!
}

type Mutation {
  setTransaction(data: SetTransaction!): Transactions!
  createAccount(data: createAccount!): Account!
}
input createAccount {
  userId: Int
  type: AccountType!
  balance: Float!
}

input SetTransaction {
  accountId: Int
  operation: Operation!
  value: Float!
}

type Account {
  id: ID
  userId: ID!
  type: AccountType!
  balance: Float!
  updatedAt: Date
  createdAt: Date
  transactions: [Transactions]
}

type Transactions {
  account: Account
  accountId: ID!
  id: ID!
  date: Date!
  operation: Operation!
  value: Float!
}

enum AccountType {
  SAVING,
  CHECKING
}

enum Operation {
  WITHDRAW,
  DEPOSIT,
  TRANSFER
}
