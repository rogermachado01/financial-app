scalar Date

schema {
  query: Query
  mutation: Mutation
}

type Query {
  me: Account!
  account(id: ID!): Account
  transactions(id: ID!): Transaction!
}

type Mutation {
  setTransaction(data: SetTransaction!): Transaction!
}

input SetTransaction {
  date: Date!
  operation: Operation!
  value: Float!
}

enum AccountType {
  SAVING,
  CHECKING
}

type Account {
  id: ID!
  userId: ID!
  type: AccountType!
  balance: Float!
  lastBalanceUpdate: Date
}

enum Operation {
  MINUS,
  PLUS
}

type Transactions {
  accountId: ID!
  id: ID!
  date: Date!
  operation: Operation!
  value: Float!
}