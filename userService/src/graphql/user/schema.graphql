scalar Date

schema {
  query: Query
  mutation: Mutation
}

type Query {
  me: User!
  user(userId: ID!): User
}

type Mutation {
  createUser(data: CreateUser): User!
  updatePersonalInfo(data: UpdatePersonalInfo!): User!
  updateAddress(data: UpdateAddress!): User!
}

input UpdateAddress {
  id: ID!
}

input UpdatePersonalInfo {
  id: ID!
}

input CreateUser {
  password: String!
  email: String!
}

enum Role {
  USER,
  ADMIN,
}

type User {
  id: ID!
  accountId: ID
  password: String!
  email: String!
  role: Role
  address: Address
  personalInfo: PersonalInfo
}

type Address {
  id: ID!
  zipcode: String
  street: String
  country: String
  city: String
  state: String
  number: String
  userId: ID!
}

type PersonalInfo {
  id: ID!
  fullName: String
  birthDate: Date
  personalIdentifier: String
  motherName: String
  fatherName: String
  scolarship: String
  userId: ID!
}